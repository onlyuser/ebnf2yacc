(grammar
    (definitions
        (def_proto_block
            "\n    #include <stdio.h>\n    void yyerror(char *);\n    int yylex(void);\n\n    int sym[26];\n"
        )
        (definition
            token
            (def_symbols
                (def_symbol
                    INTEGER
                )
                (def_symbol
                    VARIABLE
                )
            )
        )
        (definition
            left
            (def_symbols
                (def_symbol
                    '+'
                )
                (def_symbol
                    '-'
                )
            )
        )
        (definition
            left
            (def_symbols
                (def_symbol
                    '*'
                )
                (def_symbol
                    '/'
                )
            )
        )
    )
    (rules
        (rule
            program
            (rule_alts
                (rule_alt
                    (rule_terms
                        program
                        statement
                        '\n'
                    )
                    (NULL)
                )
                (rule_alt
                    (NULL)
                )
            )
        )
        (rule
            statement
            (rule_alts
                (rule_alt
                    (rule_terms
                        expression
                    )
                    (rule_action_block
                        " printf(\"%d\\n\", $1); "
                    )
                )
                (rule_alt
                    (rule_terms
                        VARIABLE
                        '='
                        expression
                    )
                    (rule_action_block
                        " sym[$1] = $3; "
                    )
                )
            )
        )
        (rule
            expression
            (rule_alts
                (rule_alt
                    (rule_terms
                        INTEGER
                    )
                    (NULL)
                )
                (rule_alt
                    (rule_terms
                        VARIABLE
                    )
                    (rule_action_block
                        " $$ = sym[$1]; "
                    )
                )
                (rule_alt
                    (rule_terms
                        expression
                        '+'
                        expression
                    )
                    (rule_action_block
                        " $$ = $1 + $3; "
                    )
                )
                (rule_alt
                    (rule_terms
                        expression
                        '-'
                        expression
                    )
                    (rule_action_block
                        " $$ = $1 - $3; "
                    )
                )
                (rule_alt
                    (rule_terms
                        expression
                        '*'
                        expression
                    )
                    (rule_action_block
                        " $$ = $1 * $3; "
                    )
                )
                (rule_alt
                    (rule_terms
                        expression
                        '/'
                        expression
                    )
                    (rule_action_block
                        " $$ = $1 / $3; "
                    )
                )
                (rule_alt
                    (rule_terms
                        '('
                        expression
                        ')'
                    )
                    (rule_action_block
                        " $$ = $2; "
                    )
                )
            )
        )
    )
    (code
        "\n\nvoid yyerror(char *s) {\n    fprintf(stderr, \"%s\\n\", s);\n}\n\nint main(void) {\n    yyparse();\n}\n"
    )
)
