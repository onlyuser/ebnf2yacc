
%{
    #include <stdio.h>
    int yylex(void);
    void yyerror(char *);
%}

%union
{
    int iValue;
}

%token INTEGER
%token<iValue> program expr

%%

program:
          (expr { })? '\n' {
                if($1)
                {
                    printf("%d\n", std::get<0>(*p));
                }
            }
        ;

expr:
        INTEGER         { $$ = $1; }
        | expr '+' expr { $$ = $1 + $3; }
        | expr '-' expr { $$ = $1 - $3; }
        ;

%%

int main(void) {
{
    yyparse();
    return 0;
}
